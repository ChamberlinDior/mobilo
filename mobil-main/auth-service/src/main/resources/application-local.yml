######################################################################
#  PROFIL  « local »
#  (spécifique au poste de dev / CI – surcharge minimale)
######################################################################

spring:
  config:
    activate:
      on-profile: local            # ← active ce fichier quand le profil = local
    import: "classpath:application.yml"   # ⇦ récupère toute la conf par défaut

  # ───────────────────────────────────────────────────────────────
  # CACHE (Caffeine) – valeurs plus agressives pour le dev
  # ───────────────────────────────────────────────────────────────
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=2_000,expireAfterWrite=30s

  # ───────────────────────────────────────────────────────────────
  # DATASOURCE (MySQL local)
  # ───────────────────────────────────────────────────────────────
  datasource:
    url: jdbc:mysql://localhost:3306/mobilite?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10

  # ───────────────────────────────────────────────────────────────
  # JPA / HIBERNATE
  # ───────────────────────────────────────────────────────────────
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: false

  # ───────────────────────────────────────────────────────────────
  # SECURITY – JWT resource server
  # ───────────────────────────────────────────────────────────────
  security:
    oauth2:
      resourceserver:
        jwt:
          secret: ${app.jwt.secret}

  # ───────────────────────────────────────────────────────────────
  # MULTIPART UPLOAD (no limit en dev)
  # ───────────────────────────────────────────────────────────────
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1

  # ───────────────────────────────────────────────────────────────
  # TASK SCHEDULING
  # ───────────────────────────────────────────────────────────────
  task:
    scheduling:
      pool:
        size: 4

  # ───────────────────────────────────────────────────────────────
  # MAIL (stub local)
  # ───────────────────────────────────────────────────────────────
  mail:
    host: localhost
    port: 2500
    username: ""
    password: ""
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
    from: no-reply@ride-service.example.com

# ───────────────────────────────────────────────────────────────
# LOGS – visibilité des push en dev
# ───────────────────────────────────────────────────────────────
logging:
  level:
    root: INFO
    com.mobility: DEBUG
    com.mobility.ride.service.push: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.orm.jdbc.bind: WARN

# ───────────────────────────────────────────────────────────────
#  SECTION  « app »  – secrets/email/API-keys propres au dev
# ───────────────────────────────────────────────────────────────
app:
  jwt:
    secret: sCyaX+2NsXpvQUvJBA0Xzj6EObLLZEfggYg0RUe2D68=
    issuer: mobility-auth
    clock-skew-sec: 60
  payments:
    provider: stub
  geocoding:
    api-key: AIzaSyBViGGakHSvDKELeL_3xX3bcfpVddpFIUg   # clé Google Geocoding

  # Forcer Expo en local pour Expo Go
  push:
    provider: expo
    expo:
      api: https://exp.host/--/api/v2/push/send
      maxBatch: 90
    fcm:
      serverKey: ""          # non utilisé en local (Expo Go)
      endpoint: https://fcm.googleapis.com/fcm/send

# ───────────────────────────────────────────────────────────────
#  EXCHANGE-RATES (optionnel en local – peut rester vide)
# ───────────────────────────────────────────────────────────────
exchange:
  api:
    url: https://api.exchangerate.host/latest
    key: ""                     # vide = accès libre ou mock

######################################################################
#  👉  Aucun bloc `pricing:` ici : la grille France / USA / Gabon
#      reste celle définie dans  application.yml
######################################################################
